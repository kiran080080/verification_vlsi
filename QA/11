/*Generate values between 0 to 7 for addr signal when wr is high and values
between 8 to 15 when wr is low. Generator code is mentioned in the Instruction
tab. Verify your code for 20 iterations by sending values of both wr and addr
on a console. Share your SV Code.

class generator;
  rand bit [3:0] addr;
  rand bit wr;*/
class transaction;
 rand bit [3:0] addr;
  rand bit wr;
  extern constraint data;
  extern constraint data1;
  endclass
  constraint transaction::data{
  (wr==1)->(addr inside {[0:7]});
  (wr==0)->(addr inside {[8:15]});
  }
  constraint transaction ::data1{
  wr dist{0:=50,1:=81};
  addr dist{[0:7]:/80,[8:15]:/20};
  }
  
  class generator;
  transaction g1;
  function new();
  g1=new();
  endfunction
  endclass
  
  
module ass_4( );
generator g2;
initial begin
g2=new();
for(int i=0;i<20;i++) begin
g2.g1.randomize();
$display("w=%0b,addr=%0d",g2.g1.wr,g2.g1.addr);
end
end
endmodule
