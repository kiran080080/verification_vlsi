/*For the Generator code mentioned in the Instruction tab, 
expected values for variable a ranges from 0 to 8, variable
 b ranges from 0 to 5. Also, add logic to store the number of 
 times randomization failed. Print values of variables during 
 each iteration and error count after generating 20 random values
  for a and b. Add Constraint Code
 and Testbench top code to the Design. Share your SV Code.
 
 class generator;
  rand bit [4:0] a;
  rand bit [5:0] b;
endclass
*/




 class generator;
  
  rand bit [4:0] a;
  rand bit [5:0] b;
  constraint data;
endclass
constraint generator::data{
a inside{[0:8]};
b inside{[0:5]};
}

module ass3();
generator g5;
int error=0;
initial begin
g5=new();
for(int i=0;i<20;i++) begin
if(!g5.randomize) begin
error=error+1;
end
$display(" value of a=%0d,b=%0d, and randomization failed %0d",g5.a,g5.b,error);
#20;
end
end
endmodule
