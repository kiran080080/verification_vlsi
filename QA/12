/* Code for transaction class is mentioned in the Instruction tab. Write a code to send transaction data between generator and driver.
 Also, verify the data by printing the value of data members of Generator and Driver. Share your SV Code.


class transaction;
bit [7:0] addr = 7'h12;
bit [3:0] data = 4'h4;
bit we = 1'b1;
bit rst = 1'b0;
endclass*/
class transaction;
bit [7:0] addr = 7'h12;
bit [3:0] data = 4'h4;
bit we = 1'b1;
bit rst = 1'b0;
endclass

class generator;
transaction t;
mailbox mbx;
//function new(mailbox mbx);
//this.mbx=mbx;
//endfunction
task run();
t=new();
mbx.put(t);
$display("[GEN] SENT |  addr=%0h  |   data=%0h    | we=%0b  |rst= %0b",t.addr,t.data,t.we,t.rst);
endtask
endclass

class driver;
transaction t1;
mailbox  mbx;
task run();
mbx.get(t1);
$display("[DRV] RCVD |  addr=%0h  |   data=%0h    | we=%0b  |rst= %0b",t1.addr,t1.data,t1.we,t1.rst);
endtask
endclass

module ipc_ass( );
generator g;
driver d;
mailbox  mbx;
initial begin;
mbx=new();
g=new();
d=new();
g.mbx=mbx;
d.mbx=mbx;
g.run();
d.run();
end
endmodule
